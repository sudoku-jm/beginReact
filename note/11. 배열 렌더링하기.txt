sample.js - 배열 데이터 가져옴
UserList.js - 컴포넌트

[1비효율적으로 구현]
import React from 'react'

function User({user}){
    return(
        <div>
            <b>{user.username}</b> <span>{user.email}</span>
        </div>
    )
}

function UserList () {
    const users = [
        {
            id:1,
            username:'velopert',
            email : 'public.velopoert@gamil.com'
        },
        {
            id:2,
            username:'tester',
            email : 'tester@example.com'
        },
        {
            id:3,
            username:'liz',
            email : 'liz@example.com'
        },
    ];

    return(
        <>
            <User user={users[0]}/>
            <User user={users[1]}/>
            <User user={users[2]}/>
        </>
    )
}

export default UserList;


====
[2.map으로 반복]
import React from 'react'

function User({user}){
    return(
        <div>
            <b>{user.username}</b> <span>{user.email}</span>
        </div>
    )
}

function UserList () {
    const users = [
        {
            id:1,
            username:'velopert',
            email : 'public.velopoert@gamil.com'
        },
        {
            id:2,
            username:'tester',
            email : 'tester@example.com'
        },
        {
            id:3,
            username:'liz',
            email : 'liz@example.com'
        },
    ];

    return(
        <>
            {
             users.map(
                 user => (<User user={user}/>)
             )
            }
        </>
    )
}

export default UserList;


//잘 나오지만 console에 오류가 뜬다.
react_devtools_backend.js:4045 Warning: Each child in a list should have a unique "key" prop.

map에는 key가 필요.

key={user.id} user의 id를 key값으로 쓰겠다.

return(
        <>
            {
             users.map(
                 user => (<User key={user.id} user={user}/>)
             )
            }
        </>
    )


//하지만 key로 쓰지 못하는 값이 있을 경우도 있다.

 return(
        <>
            {
             users.map(
                (user,index) => (<User key={index} user={user}/>)
             )
            }
        </>
    )

//map에 2번째 인자로 index값을 받아서 key로 써도 된다.
//경고가 없어질 뿐이지 성능적으로 좋아진건 아니다.
(key에 index를 넣는건 피해주자.)
key가 있어야 렌더링 될 때 효율적이다.
--
